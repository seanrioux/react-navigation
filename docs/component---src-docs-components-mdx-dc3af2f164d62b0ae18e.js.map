{"version":3,"sources":["webpack:///../src/docs/components.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","__position","__code","__scope","Objective","Progress","Result","Current","Score","Goal","Due","Okr","Row","Playground","Props","dateOptions","metrics","results","grades","id","name","prefix","suffix","space","allowNegative","decimalScale","range","color","type","label","text","date","options","year","month","day","value","direction","metricId","start","end","className","current","circle","parentName","of","isMDXComponent"],"mappings":"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","file":"component---src-docs-components-mdx-dc3af2f164d62b0ae18e.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/seanrioux/products/open-source-okr/code/react-okr-ui/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport Objective from \"../components/Objective\";\nimport Progress from \"../components/Progress\";\nimport Result from \"../components/Result\";\nimport Current from \"../components/Current\";\nimport Score from \"../components/Score\";\nimport Goal from \"../components/Goal\";\nimport Due from \"../components/Due\";\nimport Okr from \"../components/Okr\";\nimport Row from \"../components/Row\";\nimport { Playground, Props } from \"docz\";\nimport { dateOptions, metrics, results, grades } from \"../data/example.js\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n\n    <h1 {...{\n      \"id\": \"components\"\n    }}>{`Components`}</h1>\n    <p>{`React OKR UI provides a collection of highly compositional components for a wide range of possible OKR UI requirements.`}</p>\n    <p>{`Here's a live example. Adjust values in the Playground area to test how the components work and it's props work.`}</p>\n    <Playground __position={0} __code={'() => {\\n  // Setup metrics\\n  const metrics = [\\n    {\\n      id: \\'1\\',\\n      name: \\'product revenue\\',\\n      prefix: \\'\\',\\n      suffix: \\'%\\',\\n      space: false, // Fix\\n      allowNegative: false,\\n      decimalScale: 2,\\n    },\\n  ]\\n  // Set grades\\n  const grades = [\\n    {\\n      id: \\'1\\',\\n      name: \\'Fail\\',\\n      range: [0.0, 0.75],\\n      color: \\'#ef4444\\',\\n    },\\n    {\\n      id: \\'2\\',\\n      name: \\'Pass\\',\\n      range: [0.75, 2.0],\\n      color: \\'#10b981\\',\\n    },\\n  ]\\n  return (\\n    <Okr metrics={metrics} grades={grades}>\\n      <Objective>\\n        <Row type=\\\"flex\\\">\\n          <Goal label=\\\"Objective\\\" text=\\\"Carve out a niche\\\" />\\n          <Due\\n            label=\\\"Due date\\\"\\n            date=\\\"2022/01/01\\\"\\n            options={{ year: \\'numeric\\', month: \\'short\\', day: \\'numeric\\' }}\\n          />\\n        </Row>\\n        <Progress label=\\\"progress\\\" value={0.75} />\\n        <Result>\\n          <Row type=\\\"flex\\\">\\n            <Goal\\n              label=\\\"Key Result\\\"\\n              direction=\\\"increase\\\"\\n              metricId=\\\"1\\\"\\n              start={20}\\n              end={50}\\n            />\\n            <Row type=\\\"flex\\\">\\n              <Current\\n                className=\\\"okr-mr-1\\\"\\n                label=\\\"Current\\\"\\n                metricId=\\\"1\\\"\\n                value={30}\\n              />\\n              <Score\\n                className=\\\"okr-ml-1\\\"\\n                direction=\\\"increase\\\"\\n                start={20}\\n                end={50}\\n                current={30}\\n                circle\\n              />\\n            </Row>\\n          </Row>\\n        </Result>\\n      </Objective>\\n    </Okr>\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t{() => {\n        // Setup metrics\n        const metrics = [{\n          id: \"1\",\n          name: \"product revenue\",\n          prefix: \"\",\n          suffix: \"%\",\n          space: false,\n          // Fix\n          allowNegative: false,\n          decimalScale: 2\n        }]; // Set grades\n\n        const grades = [{\n          id: \"1\",\n          name: \"Fail\",\n          range: [0.0, 0.75],\n          color: \"#ef4444\"\n        }, {\n          id: \"2\",\n          name: \"Pass\",\n          range: [0.75, 2.0],\n          color: \"#10b981\"\n        }];\n        return <Okr metrics={metrics} grades={grades} mdxType=\"Okr\">\n\t\t\t\t<Objective mdxType=\"Objective\">\n\t\t\t\t\t<Row type=\"flex\" mdxType=\"Row\">\n\t\t\t\t\t\t<Goal label=\"Objective\" text=\"Carve out a niche\" mdxType=\"Goal\" />\n\t\t\t\t\t\t<Due label=\"Due date\" date=\"2022/01/01\" options={{\n                year: \"numeric\",\n                month: \"short\",\n                day: \"numeric\"\n              }} mdxType=\"Due\" />\n\t\t\t\t\t</Row>\n\t\t\t\t\t<Progress label=\"progress\" value={0.75} mdxType=\"Progress\" />\n\t\t\t\t\t<Result mdxType=\"Result\">\n\t\t\t\t\t\t<Row type=\"flex\" mdxType=\"Row\">\n\t\t\t\t\t\t\t<Goal label=\"Key Result\" direction=\"increase\" metricId=\"1\" start={20} end={50} mdxType=\"Goal\" />\n\t\t\t\t\t\t\t<Row type=\"flex\" mdxType=\"Row\">\n\t\t\t\t\t\t\t\t<Current className=\"okr-mr-1\" label=\"Current\" metricId=\"1\" value={30} mdxType=\"Current\" />\n\t\t\t\t\t\t\t\t<Score className=\"okr-ml-1\" direction=\"increase\" start={20} end={50} current={30} circle mdxType=\"Score\" />\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</Result>\n\t\t\t\t</Objective>\n\t\t\t</Okr>;\n      }}\n    </Playground>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"okr\"\n    }}>{`Okr`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Okr>`}</inlineCode>{` component acts as a general countainer wrapper:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Okr metrics={metrics} grades={grades}>\n    {children}\n</Okr>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"properties\"\n    }}>{`Properties`}</h3>\n    <p>{`Okr has the properties:`}</p>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`metrics`}</inlineCode>{`: i.e., the things you are measuring as results`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`grades`}</inlineCode>{`: i.e., how scores are interpreted e.g., `}<inlineCode parentName=\"li\">{`pass`}</inlineCode>{` or `}<inlineCode parentName=\"li\">{`fail`}</inlineCode></li>\n    </ul>\n    <Props of={Okr} mdxType=\"Props\" />\n    <h4 {...{\n      \"id\": \"example-metrics-and-grades\"\n    }}>{`Example metrics and grades`}</h4>\n    <p>{`Here is some example configuration:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`// Metrics\nconst metrics = [\n    {\n        id: \"1\",\n        name: \"product revenue\",\n        prefix: \"\",\n        suffix: \"%\",\n        space: false, // Fix\n        allowNegative: false,\n        decimalScale: 2,\n    },\n];\n\n// Grades\nconst grades = [\n    {\n        id: \"1\",\n        name: \"Fail\",\n        range: [0.0, 0.75],\n        color: \"#ef4444\",\n    },\n    {\n        id: \"2\",\n        name: \"Pass\",\n        range: [0.75, 2.0],\n        color: \"#10b981\",\n    },\n];\n`}</code></pre>\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"objective\"\n    }}>{`Objective`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Objective>`}</inlineCode>{` component provides a wrapper for each objective:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Objective className=\"card\">{children}</Objective>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"properties-1\"\n    }}>{`Properties`}</h3>\n    <p>{`The component takes a className and passes it on to the component:`}</p>\n    <Props of={Objective} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"result\"\n    }}>{`Result`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Result>`}</inlineCode>{` component provides a wrapper for each result:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Result className=\"card\">{children}</Result>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"properties-2\"\n    }}>{`Properties`}</h3>\n    <p>{`The component takes a className and passes it on to the component.`}</p>\n    <Props of={Result} mdxType=\"Props\" />\n    <hr></hr>\n    <h2 {...{\n      \"id\": \"goal\"\n    }}>{`Goal`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`<Goal>`}</inlineCode>{` component displays the goal text, either by processing the result object properties or simply taking objective text.`}</p>\n    <Playground __position={4} __code={'<Okr metrics={metrics} grades={grades}>\\n  <Objective>\\n    <Goal label=\\\"Objective\\\" text=\\\"Carve out a niche\\\" />\\n    <Result>\\n      <Goal\\n        label=\\\"Key Result\\\"\\n        direction=\\\"increase\\\"\\n        metricId=\\\"1\\\"\\n        start={20}\\n        end={50}\\n      />\\n    </Result>\\n  </Objective>\\n</Okr>'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Okr metrics={metrics} grades={grades} mdxType=\"Okr\">\n\t\t<Objective mdxType=\"Objective\">\n\t\t\t<Goal label=\"Objective\" text=\"Carve out a niche\" mdxType=\"Goal\" />\n\t\t\t<Result mdxType=\"Result\">\n\t\t\t\t<Goal label=\"Key Result\" direction=\"increase\" metricId=\"1\" start={20} end={50} mdxType=\"Goal\" />\n\t\t\t</Result>\n\t\t</Objective>\n\t</Okr>\n    </Playground>\n    <h3 {...{\n      \"id\": \"properties-3\"\n    }}>{`Properties`}</h3>\n    <p>{`The component takes objective properties to calculate the goal or simply text. It also includes an optional label:`}</p>\n    <Props of={Goal} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"due\"\n    }}>{`Due`}</h2>\n    <p>{`Input any parsable date string (or timestamp) to display the date. Customize using options:`}</p>\n    <Playground __position={6} __code={'<Due\\n  label=\\\"Due date\\\"\\n  date=\\\"2022/01/01\\\"\\n  options={{ year: \\'numeric\\', month: \\'short\\', day: \\'numeric\\' }}\\n/>'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Due label=\"Due date\" date=\"2022/01/01\" options={{\n        year: \"numeric\",\n        month: \"short\",\n        day: \"numeric\"\n      }} mdxType=\"Due\" />\n    </Playground>\n    <h2 {...{\n      \"id\": \"progress\"\n    }}>{`Progress`}</h2>\n    <p>{`Progress indicator for objectives, calculated from result scores or input as a percentage value.`}</p>\n    <Playground __position={7} __code={'<Okr metrics={metrics} grades={grades}>\\n  <Objective>\\n    <Progress label=\\\"progress\\\" value={0.75} />\\n    <Progress label=\\\"progress\\\" results={results} />\\n  </Objective>\\n</Okr>'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Okr metrics={metrics} grades={grades} mdxType=\"Okr\">\n\t\t<Objective mdxType=\"Objective\">\n\t\t\t<Progress label=\"progress\" value={0.75} mdxType=\"Progress\" />\n\t\t\t<Progress label=\"progress\" results={results} mdxType=\"Progress\" />\n\t\t</Objective>\n\t</Okr>\n    </Playground>\n    <h3 {...{\n      \"id\": \"properties-4\"\n    }}>{`Properties`}</h3>\n    <p>{`Takes either a percentage value, or an array of results.`}</p>\n    <Props of={Progress} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"results-example\"\n    }}>{`Results example`}</h3>\n    <p>{`Here is how to structure your results in an array:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`    const results = [\n        id: \"1\",\n        metricId: \"1\",\n        direction: \"increase\",\n        start: 50,\n        end: 10,\n        current: 20,\n    },\n]\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"current\"\n    }}>{`Current`}</h2>\n    <p>{`Display the current result value.`}</p>\n    <Playground __position={9} __code={'<Okr metrics={metrics} grades={grades}>\\n  <Objective>\\n    <Result>\\n      <Current label=\\\"Current\\\" metricId=\\\"1\\\" value={30} />\\n    </Result>\\n  </Objective>\\n</Okr>'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Okr metrics={metrics} grades={grades} mdxType=\"Okr\">\n\t\t<Objective mdxType=\"Objective\">\n\t\t\t<Result mdxType=\"Result\">\n\t\t\t\t<Current label=\"Current\" metricId=\"1\" value={30} mdxType=\"Current\" />\n\t\t\t</Result>\n\t\t</Objective>\n\t</Okr>\n    </Playground>\n    <h3 {...{\n      \"id\": \"properties-5\"\n    }}>{`Properties`}</h3>\n    <p>{`Takes the current value from the result and the metricId to format the number.`}</p>\n    <Props of={Current} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"score\"\n    }}>{`Score`}</h2>\n    <p>{`Score the result based on start, end (goal), and current value.`}</p>\n    <Playground __position={11} __code={'<Okr metrics={metrics} grades={grades}>\\n  <Objective>\\n    <Result>\\n      <Score\\n        label=\\\"score\\\"\\n        direction=\\\"increase\\\"\\n        start={20}\\n        end={50}\\n        current={30}\\n        circle\\n      />\\n    </Result>\\n  </Objective>\\n</Okr>'} __scope={{\n      props,\n      DefaultLayout,\n      Objective,\n      Progress,\n      Result,\n      Current,\n      Score,\n      Goal,\n      Due,\n      Okr,\n      Row,\n      Playground,\n      Props,\n      dateOptions,\n      metrics,\n      results,\n      grades,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n\t<Okr metrics={metrics} grades={grades} mdxType=\"Okr\">\n\t\t<Objective mdxType=\"Objective\">\n\t\t\t<Result mdxType=\"Result\">\n\t\t\t\t<Score label=\"score\" direction=\"increase\" start={20} end={50} current={30} circle mdxType=\"Score\" />\n\t\t\t</Result>\n\t\t</Objective>\n\t</Okr>\n    </Playground>\n    <h3 {...{\n      \"id\": \"properties-6\"\n    }}>{`Properties`}</h3>\n    <p>{`Takes result properties, as well as a `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{`, and `}<inlineCode parentName=\"p\">{`className`}</inlineCode>{`. Can display as a `}<inlineCode parentName=\"p\">{`circle`}</inlineCode>{` which uses the score grade to determine its background color.`}</p>\n    <Props of={Score} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"row\"\n    }}>{`Row`}</h2>\n    <p>{`A flex row utility component (very optional).`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Row type=\"flex\">{children}</Row>\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"properties-7\"\n    }}>{`Properties`}</h3>\n    <p>{`Use to layout your row using `}<inlineCode parentName=\"p\">{`flex`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`wrap`}</inlineCode>{`.`}</p>\n    <Props of={Row} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}